
int hauteur =8;
int largeur=6;
int tailleBrique = 10;
int xLanceur = 30;
int yLanceur = 80;

String couleur_briques[] = {"blue", "cyan", "black", "green", "magenta", "orange", "pink", "red", "white", "yellow"};

// on declare un tableaux de booleens pour representer les briques
boolean[][] briques = new boolean[hauteur][largeur];
int[] coordonees_clic = new int[2];
boolean clic = false;

void main() {
	//on crée l'image telles qu'une brique fasse 10*10 pixels
   reset(largeur*tailleBrique,hauteur*tailleBrique, false);   
	// Définition d'un runnable qui detcet les clics
	setRunnable(new Runnable() { public void run() {
		coordonees_clic[0]= getX(); 
         coordonees_clic[1] = getY();
	    clic = true;
	}});

   //Création et remplissage initial du tableau contenant les briques
    for (int i = 0; i < briques.length; i ++) {
      for (int j = 0; j < briques[0].length; j ++) {
         briques[i][j] = false;
      }
   }
   // on appelle la fonction finDeTour pour initialiser les briques
   finDeTour();
   
   //Entrée dans la boucle principale
    boolean continuer = true;
   while (continuer) {
      for (int i = 0; i < briques.length; i ++) {
         for (int j = 0; j < briques[0].length; j ++) {
            if (briques[i][j]) {
               dessinerBrique(j,i, couleur_au_hasard());
            } else {
               dessinerBrique(j,i, "white");
            }
         }
      }
      // on attend un clic de l'utilisateur
      while ( ! clic) {
         sleep(1);
      }
      echo("x : "+coordonees_clic[0]+ "   y : "+ coordonees_clic[1]);
      lancer_balle(coordonees_clic[0], coordonees_clic[1]);
      clic = false;
      // si fin de tour retourne false c'est qu'on a perdu
      if ( ! finDeTour()) {
         continuer = false;
      }
   }
}

boolean finDeTour() {
   //On abaisse toutes les briques d'une ligne, et on genere la ligne du dessus
    //Si la ligne du bas n,'est pas vide avant dêtre abaissée, game over
    boolean perdu = false;
   for (int i = briques.length -1; i >= 0; i --) {
      for (int j = 0; j < briques[0].length; j ++) {
         if (i == briques.length -1 && briques[i][j]) {
            return  false;
         }
         if (i != 0) {
            //On copie les briques de la ligne au dessus si ce n'est pas la ligne tout au dessus
             briques[i][j] = briques[i -1][j];
         } else {
            //sinon , on genere une ligne.
             briques[i][j] = random() >0.5;
         }
      }
   }
   return  true;
}

void dessinerBrique(int x, int y, String color){
	for (int i = 0; i < 10; i++){
		for(int j = 0; j < 10; j++){
			setPixel(tailleBrique*x+i, tailleBrique*y+j, color);
		}
	}
}



//Marche de temps en temps... et que lorque l'on clique dans la partie gauche pour le moment
void lancer_balle(int xArrivee, int yArrivee){
	//On calcule les coordonées du vecteur
	yArrivee = -yArrivee;
	yLanceur = -yLanceur;
	int a = (yArrivee-yLanceur)/(xArrivee-xLanceur);
	int b = yLanceur-a*xLanceur;
	//si la balle part à gauche du lanceur
	if(xArrivee < xLanceur){
		for (int x = xLanceur; x >= 0; x--){
			int y = a*x+b;
			echo("setting pixel x=" + x + " et y="+-y);
			setPixel(x, -y, "black");
			sleep(50);
		}
	}
}

String couleur_au_hasard(){
   int nombre_random = (int)floor(random()*10);
   return couleur_briques[nombre_random];
}
