
int hauteur =8;

int largeur =6;

int tailleBrique = 10;

int xLanceur = 30;

int yLanceur = 80;

int nb_tour;

int vert;

int bleu;

int rouge;

// on declare un tableaux de booleens pour representer les briques
int[][] briques = new int[hauteur][largeur];

int[] coordonees_clic = new int[2];

boolean clic = false;

void main() {
   vert =250;
   bleu =0;
   rouge =0;
   nb_tour =1;
   //on crée l'image telles qu'une brique fasse 10*10 pixels
    reset(largeur * tailleBrique, hauteur * tailleBrique, false);
   // Définition d'un runnable qui detcet les clics
    setRunnable(new Runnable() {
      public void run() {
         coordonees_clic[0] = getX(); coordonees_clic[1] = getY(); clic = true;}
   }
  );
   //Création et remplissage initial du tableau contenant les briques
    for (int i = 0; i < briques.length; i ++) {
      for (int j = 0; j < briques[0].length; j ++) {
         briques[i][j] = 0;
      }
   }
   // on appelle la fonction finDeTour pour initialiser les briques
    finDeTour();
   //Entrée dans la boucle principale
    boolean continuer = true;
   while (continuer) {
      for (int i = 0; i < briques.length; i ++) {
         for (int j = 0; j < briques[0].length; j ++) {
            if (briques[i][j] >0) {
               dessinerBrique(j, i, briques[i][j]);
            } else {
               dessinerBrique(j, i, 0);
            }
         }
      }
      // on attend un clic de l'utilisateur
       while ( ! clic) {
         sleep(1);
      }
      //lancer_balle(coordonees_clic[0], coordonees_clic[1]);
       clic = false;
      echo("x : " + coordonees_clic[0] + "   y : " + coordonees_clic[1]);
      // si fin de tour retourne false c'est qu'on a perdu
       if ( ! finDeTour()) {
         continuer = false;
      }
   }
}

boolean finDeTour() {
   //On abaisse toutes les briques d'une ligne, et on genere la ligne du dessus
    //Si la ligne du bas n,'est pas vide avant dêtre abaissée, game over
    boolean perdu = false;
   for (int i = briques.length -1; i >= 0; i --) {
      for (int j = 0; j < briques[0].length; j ++) {
         if (i == briques.length -1 && briques[i][j] >0) {
            return  false;
         }
         if (i != 0) {
            //On copie les briques de la ligne au dessus si ce n'est pas la ligne tout au dessus
             briques[i][j] = briques[i -1][j];
         } else {
            //sinon , on genere une ligne.
             boolean brique = random() >0.5;
            if (brique) {
               briques[i][j] = nb_tour;
            } else {
               briques[i][j] =0;
            }
         }
      }
      nb_tour ++;
   }
   return  true;
}

void dessinerBrique(int x, int y, int valeur_brique) {
   for (int i = 0; i < 10; i ++) {
      for (int j = 0; j < 10; j ++) {
         if (valeur_brique ==0) {
            setPixel(tailleBrique * x + i, tailleBrique * y + j, 255, 255, 255);
         } else {
            vert = vert - valeur_brique;
            bleu = bleu + valeur_brique;
            rouge = rouge+valeur_brique;
            if (vert <0 || vert >250) {
               vert =100;
            }
            if (rouge <0 || rouge >250) {
               rouge =100;
            }
            if (bleu <0 || bleu >250) {
               bleu =100;
            }
            setPixel(tailleBrique * x + i, tailleBrique * y + j, rouge, vert, bleu);
         }
      }
   }
}

//void lancer_balle(int x, int y){
 //On calcule les coordonées du vecteur
//	int xVecteur = x - xLanceur;
//	int yVecteur = y - yLanceur;
//	echo("xVecteur=" + xVecteur + " yVecteur=" + yVecteur);
//}
